# This file was automatically created by FeynRules 1.6.6
# Mathematica version: 8.0 for Microsoft Windows (32-bit) (December 7, 2010)
# Date: Wed 27 Jun 2012 18:38:01


# 
# This is the logfile for the model SM_plus_UT_vectors

# Authors: Sho Iwamoto
# Model version: 0.1
# Checking the Quantum numbers
   * Electric charge defined.
# Checking the Lagrangians
   * All Lagrangians are ok.
#
# Particle definitions
#

   * No particles removed. All particles correspond to GenInt setup.

# Automatically assigned PDG numbers
   * Assigned PDG number 9000001 to particle ghA
   * Assigned PDG number 9000002 to particle ghZ
   * Assigned PDG number 9000003 to particle ghWp
   * Assigned PDG number 9000004 to particle ghWm
   * Assigned PDG number 9000005 to particle ghG
   * Assigned PDG number 9000006 to particle xZ
   * Assigned PDG number 9000007 to particle xW+


# Compulsory PDG codes:
   * Class SM leptons complete.
   * Class SM neutrinos complete.
   * Class SM quarks complete.
   * Class SM gauge bosons complete.
#
# Parameter definitions
#

   * Parameter gw has no value. Default value 1 assigned.
   * Parameter g1 has no value. Default value 1 assigned.


# Vertices
   * Calling FeynmanRules for 6 Lagrangians.
   * Number of classes vertices: 97
   * Number of flavored vertices: 167
   * Saved vertices in InterfaceRun[ 1 ].
   * Checked QNumber conservation.
      - Quantum number GhostNumber conserved in all vertices.
      - Quantum number LeptonNumber conserved in all vertices.
      - Quantum number Q conserved in all vertices.
      - Quantum number Y conserved in all vertices.
   * particles.py written.
   * parameters.py written.
#
# Vertex definitions
#

   * 167 vertices written.
   * vertices.py written.
#
# Lorentz structure definitions
#

   * 23 lorentz structures written.
   * lorentz.py written.
#
# Coupling definitions
#

   * 135 couplings written.
   * couplings.py written.
#
# Coupling order definitions
#

   * 0 couplings orders written.
   * coupling_orders.py written.
